{"version":3,"file":"scryll.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["interface Config {\n  init: boolean,\n  direction: \"vertical\" | \"horizontal\"\n}\n\ninterface Event {\n  target: {\n    scrollTop: number\n    scrollLeft: number\n  }\n}\n\ninterface Element {\n  scrollTop: number\n  scrollLeft: number\n  addEventListener: (name: string, listener: Function) => void\n  removeEventListener: (name: string, listener: Function) => void\n}\n\nconst scryll = (\n  selector1: string,\n  selector2: string,\n  config: Config\n) => {\n  let preventScrollEvent: Boolean = false;\n  const isEmpty = (val: any) => (val === undefined || val === null);\n  const getElement = (val: string) => {\n    const el: Element = document.querySelector(val) as any;\n    return el\n  }\n\n  config = Object.assign({}, { init: true, direction: 'vertical' }, config);\n\n  const onScroll = () => {\n    if (preventScrollEvent) {\n      preventScrollEvent = false;\n      return;\n    }\n    preventScrollEvent = true;\n  };\n\n  function onElement1Scroll (event: Event) {\n    const element2 = getElement(selector2);\n\n    onScroll();\n    if (config.direction === 'vertical') {\n      element2.scrollTop = event.target.scrollTop;\n    } else {\n      element2.scrollLeft = event.target.scrollLeft;\n    }\n  };\n\n  function onElement2Scroll (event: Event) {\n    const element1 = getElement(selector1);\n\n    onScroll();\n    if (config.direction === 'vertical') {\n      element1.scrollTop = event.target.scrollTop;\n    } else {\n      element1.scrollLeft = event.target.scrollLeft;\n    }\n  };\n\n  const init = () => {\n    if (isEmpty(selector1) || isEmpty(selector2)) {\n      new Error('You most provide a valid selector');\n      return;\n    }\n\n    const element1 = getElement(selector1);\n    const element2 = getElement(selector2);\n\n    if (isEmpty(element1) || isEmpty(element2)) {\n      new Error('Scroll element could not be found');\n      return;\n    }\n\n    preventScrollEvent = false;\n    element1.addEventListener('scroll', onElement1Scroll);\n    element2.addEventListener('scroll', onElement2Scroll);\n  };\n\n  const kill = () => {\n    const element1 = getElement(selector1);\n    const element2 = getElement(selector2);\n\n    preventScrollEvent = false;\n    element1.removeEventListener('scroll', onElement1Scroll);\n    element2.removeEventListener('scroll', onElement2Scroll);\n  };\n\n  if (config.init === true) {\n    init();\n  }\n\n  return {\n    init,\n    kill,\n  };\n};\n\nexport default scryll;\n"],"names":["selector1","selector2","config","isEmpty","val","getElement","document","querySelector","onElement1Scroll","event","element2","direction","scrollTop","target","scrollLeft","onElement2Scroll","element1","init","addEventListener","Object","assign","kill","removeEventListener"],"mappings":"oFAmBe,SACbA,EACAC,EACAC,GAGA,IAAMC,EAAU,SAACC,GAAD,OAAeA,MAAAA,GACzBC,EAAa,SAACD,GAElB,OADoBE,SAASC,cAAcH,IAc7C,SAASI,EAAkBC,GACzB,IAAMC,EAAWL,EAAWJ,GAGH,aAArBC,EAAOS,UACTD,EAASE,UAAYH,EAAMI,OAAOD,UAElCF,EAASI,WAAaL,EAAMI,OAAOC,WAIvC,SAASC,EAAkBN,GACzB,IAAMO,EAAWX,EAAWL,GAGH,aAArBE,EAAOS,UACTK,EAASJ,UAAYH,EAAMI,OAAOD,UAElCI,EAASF,WAAaL,EAAMI,OAAOC,WAIvC,IAAMG,EAAO,WACX,IAAId,EAAQH,KAAcG,EAAQF,GAAlC,CAKA,IAAMe,EAAWX,EAAWL,GACtBU,EAAWL,EAAWJ,GAExBE,EAAQa,IAAab,EAAQO,KAMjCM,EAASE,iBAAiB,SAAUV,GACpCE,EAASQ,iBAAiB,SAAUH,MAgBtC,OAJoB,KA5DpBb,EAASiB,OAAOC,OAAO,GAAI,CAAEH,MAAM,EAAMN,UAAW,YAAcT,IA4DvDe,MACTA,IAGK,CACLA,KAAAA,EACAI,KAfW,WACX,IAAML,EAAWX,EAAWL,GACtBU,EAAWL,EAAWJ,GAG5Be,EAASM,oBAAoB,SAAUd,GACvCE,EAASY,oBAAoB,SAAUP"}